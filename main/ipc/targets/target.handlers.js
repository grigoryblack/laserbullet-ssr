import { ipcMain } from "electron";
import { AppDataSource } from "../../database/config";
import { Target } from "../../database/entities/target";

const targetRepository = AppDataSource.getRepository(Target);

// üìå –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –º–∏—à–µ–Ω–∏
ipcMain.handle("get-targets", async () => {
    return await targetRepository.find({ relations: ["user"] });
});

// üìå –ü–æ–ª—É—á–∏—Ç—å –æ–¥–Ω—É –º–∏—à–µ–Ω—å –ø–æ ID
ipcMain.handle("get-target", async (_event, id) => {
    return await targetRepository.findOne({ where: { id }, relations: ["user"] });
});

// üìå –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –º–∏—à–µ–Ω—å
ipcMain.handle("create-target", async (_event, targetData) => {
    const newTarget = targetRepository.create(targetData);
    return await targetRepository.save(newTarget);
});

// üìå –û–±–Ω–æ–≤–∏—Ç—å –º–∏—à–µ–Ω—å
ipcMain.handle("update-target", async (_event, id, updateData) => {
    await targetRepository.update(id, updateData);
    return await targetRepository.findOne({ where: { id } });
});

// üìå –£–¥–∞–ª–∏—Ç—å –º–∏—à–µ–Ω—å
ipcMain.handle("delete-target", async (_event, id) => {
    await targetRepository.delete(id);
    return { message: "–ú–∏—à–µ–Ω—å —É–¥–∞–ª–µ–Ω–∞" };
});
