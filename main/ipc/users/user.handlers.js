import { ipcMain } from "electron"
import {AppDataSource} from "../../database/config";
import {User} from "../../database/entities/user";


const userRepository = AppDataSource.getRepository(User)

// üìå –ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
ipcMain.handle("get-users", async () => {
    return await userRepository.find({ relations: ["gun", "target"] })
})

// üìå –ü–æ–ª—É—á–∏—Ç—å –æ–¥–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ ID
ipcMain.handle("get-user", async (_event, id) => {
    return await userRepository.findOne({ where: { id }, relations: ["gun", "target"] })
})

// üìå –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
ipcMain.handle("create-user", async (_event, userData) => {
    const newUser = userRepository.create(userData)
    return await userRepository.save(newUser)
})

// üìå –û–±–Ω–æ–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
ipcMain.handle("update-user", async (_event, id, updateData) => {
    await userRepository.update(id, updateData)
    return await userRepository.findOne({ where: { id } })
})

// üìå –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
ipcMain.handle("delete-user", async (_event, id) => {
    await userRepository.delete(id)
    return { message: "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω" }
})
